//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace HacmeBank_v2_Website.WS_UserManagement {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_UserManagementSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public class WS_UserManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
		public WS_UserManagement(string ipAddressOfWebService ) 
		{
			this.Url = "http://" + ipAddressOfWebService + "/HacmeBank_v2_WS/WebServices/UserManagement.asmx";
		}
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string loginID, string password) {

            object[] results = this.Invoke("Login", new object[] {
                        loginID,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string loginID, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        loginID,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListCurrentUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] ListCurrentUsers(string sessionID) {
            object[] results = this.Invoke("ListCurrentUsers", new object[] {
                        sessionID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListCurrentUsers(string sessionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListCurrentUsers", new object[] {
                        sessionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndListCurrentUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetail_using_userName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetUserDetail_using_userName(string sessionID, string userName) {
            object[] results = this.Invoke("GetUserDetail_using_userName", new object[] {
                        sessionID,
                        userName});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserDetail_using_userName(string sessionID, string userName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserDetail_using_userName", new object[] {
                        sessionID,
                        userName}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetUserDetail_using_userName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetail_using_userID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetUserDetail_using_userID(string sessionID, string userID) {
            object[] results = this.Invoke("GetUserDetail_using_userID", new object[] {
                        sessionID,
                        userID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserDetail_using_userID(string sessionID, string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserDetail_using_userID", new object[] {
                        sessionID,
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetUserDetail_using_userID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetail_using_loginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetUserDetail_using_loginID(string sessionID, string loginID) {
            object[] results = this.Invoke("GetUserDetail_using_loginID", new object[] {
                        sessionID,
                        loginID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserDetail_using_loginID(string sessionID, string loginID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserDetail_using_loginID", new object[] {
                        sessionID,
                        loginID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetUserDetail_using_loginID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateUser(string sessionID, string userName, string loginID, string userPassword) {
            this.Invoke("CreateUser", new object[] {
                        sessionID,
                        userName,
                        loginID,
                        userPassword});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateUser(string sessionID, string userName, string loginID, string userPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateUser", new object[] {
                        sessionID,
                        userName,
                        loginID,
                        userPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCreateUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserDetails(string sessionID, string userID, string userName, string loginID, string userPassword) {
            this.Invoke("UpdateUserDetails", new object[] {
                        sessionID,
                        userID,
                        userName,
                        loginID,
                        userPassword});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateUserDetails(string sessionID, string userID, string userName, string loginID, string userPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUserDetails", new object[] {
                        sessionID,
                        userID,
                        userName,
                        loginID,
                        userPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateUserDetails(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserPassword(string sessionID, string userID, string newPassword) {
            this.Invoke("ChangeUserPassword", new object[] {
                        sessionID,
                        userID,
                        newPassword});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeUserPassword(string sessionID, string userID, string newPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeUserPassword", new object[] {
                        sessionID,
                        userID,
                        newPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeUserPassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUser(string sessionID, string userID) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        sessionID,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteUser(string sessionID, string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteUser", new object[] {
                        sessionID,
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    }
}
